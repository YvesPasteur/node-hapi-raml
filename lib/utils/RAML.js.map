{"version":3,"sources":["../../src/utils/RAML.js"],"names":[],"mappings":"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","file":"RAML.js","sourcesContent":["'use strict';\n\nimport path from 'path';\nimport pluralize from 'pluralize';\nimport string from 'string';\nimport _ from 'lodash';\n\nexport default class RAML {\n    constructor(fs, parser, ramlPath) {\n        if (fs === undefined) {\n            throw new Error('Missing `fs` dependency.');\n        } else {\n            this.fs = fs;\n        }\n\n        if (parser === undefined) {\n            throw new Error('Missing `parser` dependency.');\n        } else {\n            this.parser = parser;\n        }\n\n        if (ramlPath === undefined) {\n            throw new Error('Missing path to RAML file');\n        } else {\n            this.resolvedRamlPath = path.resolve(process.cwd(), ramlPath);\n\n            if (!fs.existsSync(this.resolvedRamlPath)) {\n                throw new Error('path to RAML file does not exist');\n            }\n        }\n    }\n\n    loadRAMLFile() {\n        return new Promise((resolve, reject) => {\n            this.fs.readFile(this.resolvedRamlPath, (err, data) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    this.parser.load(data)\n                    .then((parsedData) => {\n                        resolve(parsedData);\n                    })\n                    .catch((parseErr) => {\n                        reject(new Error('Parsing error: ' + parseErr));\n                    });\n                }\n            });\n        });\n    }\n\n    getRouteMap() {\n        function camelize(str) {\n            return string(str).camelize().s;\n        }\n\n        function singularize(str) {\n            return pluralize.singular(str);\n        }\n\n        function uppercase(str) {\n            return str.toUpperCase();\n        }\n\n        function resourcesParser(resources, parentResource) {\n            let routeMap = [];\n\n            resources.forEach((resource) => {\n                let baseClassName,\n                    className,\n                    classFunction,\n                    strippedRelativeUri;\n\n                if (resource.relativeUri === undefined) {\n                    throw new Error('Resource is not parseable, no relativeUri');\n                }\n\n                resource.hapi = {};\n                classFunction = '';\n                strippedRelativeUri = resource.relativeUri.substring(1);\n\n                if (parentResource !== undefined) {\n                    className = parentResource.relativeUri.substring(1);\n                    if (className.indexOf('/') > 0) {\n                        className = className.substring(0, className.indexOf('/'));\n                    }\n\n                    resource.hapi.resourceUri = `${parentResource.hapi.resourceUri}${resource.relativeUri}`;\n                } else {\n                    className = strippedRelativeUri;\n                    if (className.indexOf('/') > 0) {\n                        className = className.substring(0, className.indexOf('/'));\n                    }\n\n                    resource.hapi.resourceUri = resource.relativeUri;\n                }\n\n                baseClassName = className;\n                className = singularize(className);\n                className = camelize(`-${className}-controller`);\n\n                switch (resource.type) {\n                    case 'collection':\n                        if (strippedRelativeUri === baseClassName) {\n                            classFunction = 'list';\n                        } else {\n                            classFunction = strippedRelativeUri.substring(strippedRelativeUri.lastIndexOf('/') + 1);\n                        }\n                        break;\n                    case 'collection-item':\n                    default:\n                        switch (strippedRelativeUri) {\n                            case '{id}':\n                                classFunction = 'fetch';\n                                break;\n                            default:\n                                classFunction = strippedRelativeUri.substring(strippedRelativeUri.lastIndexOf('/') + 1);\n                        }\n                }\n\n                resource.hapi.className = className;\n                resource.hapi.classFunction = classFunction;\n\n                if (resource.methods === undefined) {\n                    throw new Error('Resource is not parseable, no methods');\n                }\n\n                resource.methods.forEach((method) => {\n                    resource.hapi.method = uppercase(method.method);\n\n                    let route = {\n                        'className': resource.hapi.className,\n                        'classFunction': resource.hapi.classFunction,\n                        'uri': resource.hapi.resourceUri,\n                        'method': resource.hapi.method\n                    };\n\n                    routeMap.push(route);\n                });\n\n                if (resource.resources) {\n                    let mappedRoutes = resourcesParser(resource.resources, resource);\n                    routeMap = _.flatten([routeMap, mappedRoutes]);\n                }\n            });\n\n            return routeMap;\n        }\n\n        return new Promise((resolve, reject) => {\n            this.loadRAMLFile()\n            .then((ast) => {\n                try {\n                    var parsedResources = resourcesParser(ast.resources);\n                    resolve(parsedResources);\n                } catch (e) {\n                    reject(e);\n                }\n            })\n            .catch((e) => {\n                reject(e);\n            });\n        });\n    }\n}\n"]}